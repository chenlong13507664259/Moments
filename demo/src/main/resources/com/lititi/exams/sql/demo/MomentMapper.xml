<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lititi.exams.web.dao.MomentMapper">

    <resultMap type="com.lititi.exams.web.entity.Moment" id="MomentResultMap">
        <result property="id" column="id" jdbcType="BIGINT"/>
        <result property="userId" column="user_id" jdbcType="BIGINT"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="images" column="images" jdbcType="VARCHAR"/>
        <result property="location" column="location" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, user_id, content, images, location, create_time, update_time
    </sql>

    <!--查询用户及其好友的动态（分页）-->
    <select id="selectMomentsByUserAndFriends" resultMap="MomentResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM moment
        <where>
            <if test="friendIds != null and friendIds.size() > 0">
                user_id IN
                <foreach collection="friendIds" item="friendId" open="(" separator="," close=")">
                    #{friendId}
                </foreach>
            </if>
        </where>
        ORDER BY create_time DESC
        LIMIT #{offset}, #{limit}
    </select>

    <!--新增动态-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO moment(user_id, content, images, location, create_time, update_time)
        VALUES (#{userId}, #{content}, #{images}, #{location}, #{createTime}, #{updateTime})
    </insert>

    <!--删除动态-->
    <delete id="deleteByIdAndUserId">
        DELETE FROM moment
        WHERE id = #{momentId,jdbcType=BIGINT} AND user_id = #{userId,jdbcType=BIGINT}
    </delete>

</mapper>
